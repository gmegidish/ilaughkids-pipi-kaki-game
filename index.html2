<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<meta name="viewport" content="user-scalable=0,width=device-width">
	<meta name="apple-mobile-web-app-capable" content="yes">
	<meta name="format-detection" content="telephone=no">
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>

	<style type="text/css">
	body {
		margin: 0px;
		padding: 0px;
		min-height: 854px;
	}

	#gameDiv {
		width: 480px;
		height: 854px;
		padding-left: 8px;
		padding-top: 8px;
		position: relative;
	}

	#frame {
		width: 100%;
		height: 100%;
		border: 0px;
		position: absolute;
	}

	#wall {
		z-index: 1;
		top: 20px;
		left: 30px;
		width: 430px;
		position: absolute;
	}

	#score {
		width: 100%;
		position: absolute;
		top: 40px;
		right: 50px;
		font-size: 28px;
		color: #333;
		font-weight: bold;
		text-align: right;
		z-index: 15;
		display: none;
	}

	#poop {
		position: absolute;
		width: 58px;
		height: 42px;
		background: url(poop.png);
		top: 250px;
		left: 250px;
		z-index: 10;
		display: none;
	}

	#pot {
		width: 75px;
		height: 66px;
		background: url(pot.png);
		position: absolute;
		top: 730px;
		left: 300px;
		z-index: 5;
		display: none;
	}

	#kid {
		background: url(kid.png); 
		z-index: 20;
		position: absolute; 
		width: 166px; 
		height: 227px; 
		top: 60px; 
		left: 40px;
		display: none;
	}

	#potandpoop {
		background: url(potandpoop.png);
		z-index: 5;
		top: 730px;
		left: 300px;
		width: 75px;
		height: 66px;
		position: absolute;
		display: none;
	}

	#kudos1, #kudos2, #kudos3, #kudos4 {
		z-index: 20;
		position: absolute;
		display: none;
		top: 0px;
		left: 0px;
	}

	#kudos1 {
		width: 150px;
		height: 107px;
		background: url(kudos-1.png);
	}

	#kudos2 {
		width: 150px;
		height: 90px;
		background: url(kudos-2.png);
	}

	#kudos3 {
		width: 150px;
		height: 91px;
		background: url(kudos-3.png);
	}

	#kudos4 {
		width: 150px;
		height: 77px;
		background: url(kudos-4.png);
	}

	#play-button {
		width: 372px;
		height: 220px;
		position: absolute;
		top: 550px;;
		left: 60px;
	}

	#logo {
		position: absolute;
		top: 340px;
		left: 40px;
		z-index: 100;
		width: 416px;
	}

	#ilaughkids {
		position: absolute;
		left: 20px;
		top: 40px;
		z-index: 100;
		width: 460px;
	}
	</style>
</head>
<body style="margin: 0px; padding: 0px; background-color: white;">

	<div style="text-align: right; width: 480px; padding-left: 8px; margin-top: 4px;">
		<a href="http://ilaughkids.blogspot.com/" target="_top" style="font-size: 12px;">בחזרה לבלוג &rarr;</a>
	</div>

	<div id="gameDiv" style="display: none;">
		<img src="frame.png" id="frame" />
		<img src="wall.png" id="wall" />
		<div id="score">0</div>
		<div id="poop"></div>
		<div id="potandpoop"></div>
		<div id="pot"></div>
		<div id="kid"></div>
		<div id="kudos1"></div>
		<div id="kudos2"></div>
		<div id="kudos3"></div>
		<div id="kudos4"></div>

		<img src="ilaughkids.png" id="ilaughkids" />
		<img src="logo.png" id="logo" />
		<img src="play-button.png" id="play-button" />

		<audio type="audio/mpeg" src="mp3/clapping.mp3" id="clapping-mp3" preload="auto"></audio>
		<audio type="audio/mpeg" src="mp3/splat.mp3" id="splat-mp3" preload="auto"></audio>
	</div>

	<script type="text/javascript">
	var game = $("#gameDiv");
	var pot = $("#pot");
	var poop = $("#poop");

	var Game = {
		speed: 132,
		score: 0,
		gameRunning: false,

		STATE_MENU: 0,
		STATE_GAMEPLAY: 1,
		STATE_KUDOS: 2,

		KUDOS_STATE_DURATION: 2000,

		state: -1,
		kudosTimestamp: -1,
		
		logoWidth: -1,
		logoHeight: -1,

		shouldPlayClapping: -1,
		shouldPlaySplat: -1,

		resetGame: function() {
			this.state = this.STATE_MENU;
		},

		updateScore: function() {
			$("#score").html(this.score);
		},

		restartPoop: function() {
			this.startFall = +new Date();
			$("#poop").css("top", "270px");
			$("#poop").css("left", 30 + Math.random()*300);
		},

		gameTick: function() {
			// queue next anim frame
			window.requestAnimFrame($.proxy(this.gameTick, this));

			switch(this.state) {
				case this.STATE_MENU:
				this.gameTickMenu();
				break;

				case this.STATE_GAMEPLAY:
				this.gameTickGameplay();
				break;

				case this.STATE_KUDOS:
				this.gameTickKudos();
				break;
			}
		},

		/*
		restartLogoAnimation: function() {
			var that = this;

			$("#logo").animate({width: that.logoWidth*1.02}, 2000, "linear", function() {
				$("#logo").animate({width: that.logoWidth*0.98}, 2000, "linear", function() {
					setTimeout($.proxy(that.restartLogoAnimation, that), 0);
				}
			)});
		},

		jj: 0,
		gameTickMenu: function() {
			if (this.jj == 0) {
				this.jj = 1;

				this.logoWidth = parseInt($("#logo").css("width"));
				this.logoHeight = parseInt($("#logo").css("height"));

				this.restartLogoAnimation();
			}
		},
		*/

		gameTickMenu: function() {
		},

		gameTickGameplay: function() {
			var now = +new Date();
			var y = 270 + (now - this.startFall)*this.speed/1000.0;

			if (y > 720) {
				// check hit
				var poopx = parseInt($("#poop").css("left")) + 0.5*parseInt($("#poop").css("width"));
				var potx = parseInt($("#pot").css("left")) + 0.5*parseInt($("#pot").css("width"));
				var dx = Math.abs(poopx - potx);
				if (dx <= 16) {
					// hit!
					this.score++;
					this.updateScore();

					var x = parseInt($("#pot").css("left"));
					var y = parseInt($("#pot").css("top"));

					$("#potandpoop").css("left", x).show();
					$("#pot").hide();
					$("#poop").hide();

					if (this.isSafariMobile()) {
						this.shouldPlayClapping = +new Date();
					} else {	
						try {
							$("#clapping-mp3")[0].play();
						} catch (e) {
						}
					}

					for (var i=1; i<=4; i++) {
						var x = 30 + Math.random()*300;
						var y = 270 + (720-270)*Math.random();
						$("#kudos"+i).css("left", x).css("top", y);
					}

					this.state = this.STATE_KUDOS;
					this.kudosTimestamp = +new Date();
				} else {
					this.restartPoop();
					this.score = 0;
					this.updateScore();

					if (this.isSafariMobile()) {
						this.shouldPlaySplat = +new Date();
					} else {
						try {
							$("#splat-mp3")[0].play();
						} catch (e) {
						}
					}
				}
			} else {
				$("#poop").css("top", y);
			}
		},

		isSafariMobile: function() {
			if (window.navigator && window.navigator.userAgent) {
				var ua = window.navigator.userAgent;
				return ua.indexOf("iPad;") >= 0 || ua.indexOf("iPhone;") >= 0;
			}

			return false;
		},

		gameTickKudos: function() {
			var diff = +new Date() - this.kudosTimestamp;
		
			if (diff < this.KUDOS_STATE_DURATION) {
				// show kudos animation
				$("#kudos1").show();

				if (diff > this.KUDOS_STATE_DURATION/4) {
					$("#kudos2").show();
				}

				if (diff > 2*this.KUDOS_STATE_DURATION/4) {
					$("#kudos3").show();
				}

				if (diff > 3*this.KUDOS_STATE_DURATION/4) {
					$("#kudos4").show();
				}
			} else {
				// revert to other state
				this.state = this.STATE_GAMEPLAY;
				$("#pot").css("left", $("#potandpoop").css("left"));
				$("#pot").show();
				$("#poop").show();
				$("#potandpoop").hide();
				$("#kudos1").fadeOut();
				$("#kudos2").fadeOut();
				$("#kudos3").fadeOut();
				$("#kudos4").fadeOut();

				this.restartPoop();
			}
		},

		onMove: function(pt) {

			if (this.state == this.STATE_GAMEPLAY || this.state == this.STATE_KUDOS) {
				var x = pt - parseInt($("#pot").css("width"))/2;
				if (x < 30) {
					x = 30;
				} else if (x > 360) {
					x = 360;
				}

				if (this.state == this.STATE_GAMEPLAY) {
					$("#pot").css("left", x);
				} else {
					$("#potandpoop").css("left", x);
				}

				if (this.shouldPlaySplat  > -1) {
					if (((+new Date()) - this.shouldPlaySplat) < 500) {
						try {
							$("#splat-mp3")[0].play();
						} catch (e) {
						}
					}

					this.shouldPlaySplat = -1;
				}

				if (this.shouldPlayClapping > -1) {
					if (((+new Date()) - this.shouldPlayClapping) < 500) {
						try {
							$("#clapping-mp3")[0].play();
						} catch (e) {
						}
					}

					this.shouldPlayClapping = -1;
				}
			}
		},

		onMouseMove: function(e) {
			e.preventDefault();

			this.onMove(e.pageX);
		},

		onTouchMove: function(e) {
			e.preventDefault();

			var targetEvent = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];
			this.onMove(targetEvent.pageX);
		},

		onPlayClicked: function() {

			$("#play-button").fadeOut();
			$("#logo").fadeOut();
			$("#ilaughkids").fadeOut();
			
			this.state = this.STATE_GAMEPLAY;

			$("#pot").show();
			$("#poop").show();
			$("#kid").show();
			$("#score").show();

			this.score = 0;
			this.updateScore();

			this.restartPoop();
		},

		startGame: function() {
			this.resetGame();

			$(document).bind('mousemove', $.proxy(this.onMouseMove, this));
			$(document).bind('touchmove', $.proxy(this.onTouchMove, this));
			$("#play-button").click($.proxy(this.onPlayClicked, this));
	
		//	setInterval($.proxy(this.gameTick, this), 1000/60);
			window.requestAnimFrame($.proxy(this.gameTick, this));
		}
	};

	window.requestAnimFrame = (function(){
		return  window.requestAnimationFrame       || 
			window.webkitRequestAnimationFrame || 
			window.mozRequestAnimationFrame    || 
			window.oRequestAnimationFrame      || 
			window.msRequestAnimationFrame     || 
			function( callback ){
				window.setTimeout(callback, 1000 / 60);
			};
	})();


	$(document).ready(function() {
		$("#gameDiv").show();
		Game.startGame();
	});
	</script>
<body>
</html>
